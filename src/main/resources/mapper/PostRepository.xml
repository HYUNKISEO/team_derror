<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.repository.PostRepository">

    <insert id="save" flushCache="true" parameterType="com.example.demo.domain.board.Post"
    useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO post
            (category, title, content, member_id )
        VALUES
            (#{category}, #{title}, #{content}, #{member.id})
    </insert>

    <sql id="SELECT_BASE">
        SELECT
            p.id "p_id",
            p.title "p_title",
            p.category "p_catagoty",
            p.content "p_content",
            p.view_cnt "p_viewCnt",
            p.created_date "p_createdDate",
            p.member_id "p_memberId",
            m.id "m_id",
            m.username "m_username",
            m.created_date "m_created_date",
            m.email "m_email"
        FROM
            post p, member m
        WHERE
            p.member_id = m.id
    </sql>

    <resultMap id="mapMember" type="com.example.demo.domain.user.Member">
        <result column="m_id" property="id"/>
        <result column="m_username" property="username"/>
        <result column="m_password" property="password"/>
        <result column="m_name" property="name"/>
        <result column="m_created_date" property="created_date"/>
        <result column="m_email" property="email"/>
    </resultMap>

    <resultMap id="mapPost" type="com.example.demo.domain.board.Post">
        <result column="p_id" property="id"/>
        <result column="p_category" property="category"/>
        <result column="p_title" property="title"/>
        <result column="p_content" property="content"/>
        <result column="p_viewCnt" property="viewCnt"/>
        <result column="p_createdDate" property="createdDate"/>
        <collection property="member" resultMap="mapMember"/>
    </resultMap>

    <select id="findById" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
        AND p.id = #{id}
    </select>

    <update id="viewCnt" flushCache="true">
        UPDATE post
        SET view_cnt = post.view_cnt + 1
        WHERE id = #{id}
    </update>

    <select id="findAll" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
        ORDER BY p.id DESC
    </select>

    <update id="update" flushCache="true" parameterType="com.example.demo.domain.board.Post">
        UPDATE post
        SET title = #{title}, content = #{content}
        WHERE id = #{id}
    </update>

    <delete id="delete" flushCache="true" parameterType="com.example.demo.domain.board.Post">
        DELETE FROM post WHERE id = #{id}
    </delete>

    <select id="selectFromRow" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
        ORDER BY p.id DESC
        LIMIT #{param1}, #{param2}
    </select>

    <select id="selectFromRowByViewCnt" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
        ORDER BY p.view_cnt DESC
        LIMIT #{param1}, #{param2}
    </select>

    <select id="countAll" resultType="java.lang.Integer">
        SELECT count(*) FROM post
    </select>


<!--    <select id="findByTitle" resultMap="mapPost">-->
<!--        <include refid="SELECT_BASE"/>-->
<!--        <where>-->
<!--            <if test="keyword != null and keyword != ''">-->
<!--                AND p.title LIKE CONCAT('%', #{keyword}, '%')-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->

<!--    <select id="findCnt" resultType="java.lang.Integer">-->
<!--        SELECT count(*) FROM post p-->
<!--        <where>-->
<!--            <if test="keyword != null and keyword != ''">-->
<!--                AND p.title LIKE CONCAT('%', #{keyword}, '%')-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->
<!--    -->

    <select id="findByList" resultMap="mapPost">
        <include refid="SELECT_BASE"/>
                AND p.title LIKE CONCAT('%', #{keyword}, '%')
    </select>


    <select id="countAllKeyword" resultType="java.lang.Integer">
        SELECT count(distinct p.id) FROM member m join post p on m.auth_id = 2 and p.title like concat('%',#{keyword},'%');
    </select>


</mapper>
